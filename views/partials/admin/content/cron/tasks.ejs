<div class="flex flex-col pb-4">
    <h1 class="text-xl font-semibold text-gray-900">Plan and Tasks</h1>
    <p class="text-sm text-gray-700">System plan and task list, including task ID, description, execution time, status, and operation information.</p>
</div>


<table class="min-w-full divide-y divide-gray-300">
    <thead class="bg-gray-50">
        <tr>
            <th scope="col" class="w-1/12 p-3 text-left text-sm font-semibold text-gray-900">
                Task ID
            </th>
            <th scope="col" class="w-3/12 p-3 text-left text-sm font-semibold text-gray-900">
                Description
            </th>
            <th scope="col" class="w-2/12 p-3 text-left text-sm font-semibold text-gray-900">
                Expression
            </th>
            <th scope="col" class="w-1/12 p-3 text-left text-sm font-semibold text-gray-900">
                Status
            </th>
            <th scope="col" class="w-1/12 p-3 text-left text-sm font-semibold text-gray-900">
                Operation
            </th>
        </tr>
    </thead>
    <tbody class="divide-y divide-gray-200 bg-white">
        <% tasks.forEach(task=> { %>
            <tr>
                <td class="whitespace-nowrap p-3 text-sm font-medium text-gray-900">
                    <%= task.id %>
                </td>
                <td class="whitespace-nowrap p-3 text-sm font-medium text-gray-900">
                    <%= task.description %>
                </td>
                <td class="whitespace-nowrap p-3 text-sm font-medium text-gray-900">
                    <%= task.expression %>
                </td>
                <td class="whitespace-nowrap p-3 text-sm font-medium text-gray-900">
                    <span class="py-1 px-2 rounded badge <%= task.isRunning ? 'bg-green-200' : 'bg-red-200' %>">
                        <%= task.isRunning ? 'Running' : 'Stopped' %>
                    </span>
                </td>
                <td class="whitespace-nowrap p-3 text-sm font-medium text-gray-900">
                    <button class="toggle-task text-sm font-medium cursor-pointer <%= task.isRunning ? ' text-red-600 hover:text-red-400' : ' text-green-600 hover:text-green-400' %>"
                        data-task-id="<%= task.id %>">
                        <%= task.isRunning ? 'Stop' : 'Start' %>
                    </button>
                </td>
            </tr>
        <% }); %>
    </tbody>
</table>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add click event to all toggle buttons
        document.querySelectorAll('.toggle-task').forEach(button => {
            button.addEventListener('click', function () {
                const taskId = this.getAttribute('data-task-id');

                // Send request to toggle task status
                fetch(`/cron/tasks/${taskId}/toggle`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update UI
                            const statusBadge = this.parentNode.parentNode.querySelector('.badge');
                            statusBadge.textContent = data.status;
                            statusBadge.className = `py-1 px-2 rounded badge ${data.isRunning ? 'bg-green-200' : 'bg-red-200'}`;

                            // Update button
                            this.textContent = data.isRunning ? 'Stop' : 'Start';
                            this.className = `toggle-task text-sm font-medium cursor-pointer ${data.isRunning ? 'text-red-600 hover:text-red-400' : 'text-green-600 hover:text-green-400'}`;
                        } else {
                            alert('Operation failed: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred, please check the console');
                    });
            });
        });
    });
</script>